User.kt:
package com.ashwin.insertrecord_jetpackcompose71024

import androidx.room.Entity
import androidx.room.PrimaryKey

@Entity(tableName = "User")
data class User(
    @PrimaryKey(autoGenerate = true)
    val uid:Int?=null,
    val userName:String,
    val userPhone:String

)
UserDAO.kt:
package com.ashwin.insertrecord_jetpackcompose71024

import androidx.room.Dao
import androidx.room.Insert

@Dao
interface UserDAO {
    @Insert
    suspend fun insert(user:User)

}
UserDatabase.kt:
package com.ashwin.insertrecord_jetpackcompose71024

import android.content.Context
import androidx.room.Database
import androidx.room.Room
import androidx.room.RoomDatabase

@Database(entities = [User::class], version = 1)
abstract class UserDatabase : RoomDatabase() {
       abstract fun userDAO():UserDAO

       companion object{

              @Volatile
              private var INSTANCE:UserDatabase?=null

              fun getInstance(context: Context):UserDatabase{
                     return INSTANCE ?: synchronized(this){
                            val instance = Room.databaseBuilder(
                                   context.applicationContext,
                                   UserDatabase::class.java,
                                   "ashwin_database"
                            ).build()
                            INSTANCE=instance
                            instance

                     }
              }

       }




}

MainActivity.kt:
package com.ashwin.insertrecord_jetpackcompose71024

import android.os.Bundle
import android.widget.Toast
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.material3.Button
import androidx.compose.material3.OutlinedTextField
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.rememberCoroutineScope
import androidx.compose.runtime.setValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.platform.LocalContext
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import com.ashwin.insertrecord_jetpackcompose71024.ui.theme.InsertRecord_Jetpackcompose71024Theme
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.Dispatchers
//import kotlinx.coroutines.flow.internal.NoOpContinuation.context
import kotlinx.coroutines.launch
//import kotlin.coroutines.jvm.internal.CompletedContinuation.context

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContent {
            val database = UserDatabase.getInstance(this)
            InsertRecord(database)

        }
    }
}

@Composable
fun InsertRecord(database: UserDatabase){
    val context = LocalContext.current

    val userdao = database.userDAO()
    var name by remember { mutableStateOf("") }
    var phone by remember { mutableStateOf("") }
    val scope = rememberCoroutineScope()

    Column(
        modifier = Modifier
            .fillMaxSize()
            .padding(16.dp),
        horizontalAlignment = Alignment.CenterHorizontally,
        verticalArrangement = Arrangement.Top

    ) {
        Text(text = "Enter Your Details")
       
        Spacer(modifier = Modifier.height(20.dp))

        //Name
        OutlinedTextField(value = name,
                onValueChange = {name = it},
            label = {Text("Enter Your Name")},
            modifier = Modifier.fillMaxWidth()
            )
        Spacer(modifier = Modifier.height(8.dp))

        //Phone Number
        OutlinedTextField(value = phone,
              onValueChange = {phone = it},
            label = {Text("Enter Your PhoneNumber")},
            modifier = Modifier.fillMaxWidth()
        )

        Spacer(modifier = Modifier.height(16.dp))
       
        Button(onClick = {
            //Launch coroutine to insert record

            scope.launch(Dispatchers.IO) {

                 userdao.insert(User(userName=name,
                    userPhone=phone))
            }
            Toast.makeText(context, "Record Inserted " +
                    "Successfully", Toast.LENGTH_LONG).show()

        }) {
            Text(text = "Insert Now")
        }
    }
}


plugins{
  kotlin("kapt")
}

dependencies{
  def room_version = "2.6.1"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"
    // To use Kotlin Symbol Processing (KSP)
    ksp "androidx.room:room-compiler:$room_version"

    implementation "androidx.room:room-rxjava3:$room_version"
}
